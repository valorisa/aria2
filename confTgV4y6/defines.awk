BEGIN {
D["PACKAGE_NAME"]=" \"aria2\""
D["PACKAGE_TARNAME"]=" \"aria2\""
D["PACKAGE_VERSION"]=" \"1.37.0\""
D["PACKAGE_STRING"]=" \"aria2 1.37.0\""
D["PACKAGE_BUGREPORT"]=" \"https://github.com/aria2/aria2/issues\""
D["PACKAGE_URL"]=" \"https://aria2.github.io/\""
D["PACKAGE"]=" \"aria2\""
D["VERSION"]=" \"1.37.0\""
D["HAVE_STDIO_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_WCHAR_H"]=" 1"
D["STDC_HEADERS"]=" 1"
D["_ALL_SOURCE"]=" 1"
D["_DARWIN_C_SOURCE"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["_HPUX_ALT_XOPEN_SOCKET_API"]=" 1"
D["_NETBSD_SOURCE"]=" 1"
D["_OPENBSD_SOURCE"]=" 1"
D["_POSIX_PTHREAD_SEMANTICS"]=" 1"
D["__STDC_WANT_IEC_60559_ATTRIBS_EXT__"]=" 1"
D["__STDC_WANT_IEC_60559_BFP_EXT__"]=" 1"
D["__STDC_WANT_IEC_60559_DFP_EXT__"]=" 1"
D["__STDC_WANT_IEC_60559_EXT__"]=" 1"
D["__STDC_WANT_IEC_60559_FUNCS_EXT__"]=" 1"
D["__STDC_WANT_IEC_60559_TYPES_EXT__"]=" 1"
D["__STDC_WANT_LIB_EXT2__"]=" 1"
D["__STDC_WANT_MATH_SPEC_FUNCS__"]=" 1"
D["_TANDEM_SOURCE"]=" 1"
D["__EXTENSIONS__"]=" 1"
D["HAVE_DLFCN_H"]=" 1"
D["LT_OBJDIR"]=" \".libs/\""
D["BUILD"]=" \"aarch64-apple-darwin24.4.0\""
D["HOST"]=" \"aarch64-apple-darwin24.4.0\""
D["TARGET"]=" \"aarch64-apple-darwin24.4.0\""
D["HAVE_CXX11"]=" 1"
D["CXX11_OVERRIDE"]=" override"
D["HAVE_ZLIB"]=" 1"
D["HAVE_GZBUFFER"]=" 1"
D["HAVE_GZSETPARAMS"]=" 1"
D["HAVE_LIBXML2"]=" 1"
D["HAVE_SQLITE3"]=" 1"
D["HAVE_SQLITE3_OPEN_V2"]=" 1"
D["HAVE_APPLETLS"]=" 1"
D["HAVE_LIBSSH2"]=" 1"
D["HAVE_LIBCARES"]=" 1"
D["USE_APPLE_MD"]=" 1"
D["ENABLE_SSL"]=" 1"
D["USE_INTERNAL_BIGNUM"]=" 1"
D["USE_INTERNAL_ARC4"]=" 1"
D["ENABLE_BITTORRENT"]=" 1"
D["ENABLE_METALINK"]=" 1"
D["ENABLE_XML_RPC"]=" 1"
D["ENABLE_ASYNC_DNS"]=" 1"
D["HAVE_ALLOCA_H"]=" 1"
D["HAVE_ALLOCA"]=" 1"
D["HAVE_ARPA_INET_H"]=" 1"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_FLOAT_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_LANGINFO_H"]=" 1"
D["HAVE_LIBINTL_H"]=" 1"
D["HAVE_LIMITS_H"]=" 1"
D["HAVE_LOCALE_H"]=" 1"
D["HAVE_NETDB_H"]=" 1"
D["HAVE_NETINET_IN_H"]=" 1"
D["HAVE_NETINET_TCP_H"]=" 1"
D["HAVE_POLL_H"]=" 1"
D["HAVE_SIGNAL_H"]=" 1"
D["HAVE_STDDEF_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_SYS_IOCTL_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_RESOURCE_H"]=" 1"
D["HAVE_SYS_SIGNAL_H"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_SYS_TIME_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_UIO_H"]=" 1"
D["HAVE_SYS_UTSNAME_H"]=" 1"
D["HAVE_TERMIOS_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_UTIME_H"]=" 1"
D["HAVE_WCHAR_H"]=" 1"
D["HAVE_IFADDRS_H"]=" 1"
D["HAVE_PWD_H"]=" 1"
D["HAVE_STDBOOL_H"]=" 1"
D["HAVE_SYS_TIME_H"]=" 1"
D["HAVE_SYS_SELECT_H"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_PTRDIFF_T"]=" 1"
D["HAVE_A2_STRUCT_TIMESPEC"]=" 1"
D["HAVE_CFPREFERENCESCOPYAPPVALUE"]=" 1"
D["HAVE_CFLOCALECOPYPREFERREDLANGUAGES"]=" 1"
D["ENABLE_NLS"]=" 1"
D["HAVE_GETTEXT"]=" 1"
D["HAVE_DCGETTEXT"]=" 1"
D["HAVE_ALARM"]=" 1"
D["HAVE_VPRINTF"]=" 1"
D["HAVE_FORK"]=" 1"
D["HAVE_VFORK"]=" 1"
D["SELECT_TYPE_ARG1"]=" int"
D["SELECT_TYPE_ARG234"]=" (fd_set *)"
D["SELECT_TYPE_ARG5"]=" (struct timeval *)"
D["HAVE_STRFTIME"]=" 1"
D["HAVE_WORKING_VFORK"]=" 1"
D["HAVE_WORKING_FORK"]=" 1"
D["HAVE_ATEXIT"]=" 1"
D["HAVE_FTRUNCATE"]=" 1"
D["HAVE_GETCWD"]=" 1"
D["HAVE_GETENTROPY"]=" 1"
D["HAVE_GETHOSTBYADDR"]=" 1"
D["HAVE_GETHOSTBYNAME"]=" 1"
D["HAVE_GETIFADDRS"]=" 1"
D["HAVE_GETPAGESIZE"]=" 1"
D["HAVE_MEMCHR"]=" 1"
D["HAVE_MEMMOVE"]=" 1"
D["HAVE_MEMSET"]=" 1"
D["HAVE_MKDIR"]=" 1"
D["HAVE_MMAP"]=" 1"
D["HAVE_MUNMAP"]=" 1"
D["HAVE_NL_LANGINFO"]=" 1"
D["HAVE_POSIX_MEMALIGN"]=" 1"
D["HAVE_POW"]=" 1"
D["HAVE_PUTENV"]=" 1"
D["HAVE_RMDIR"]=" 1"
D["HAVE_SELECT"]=" 1"
D["HAVE_SETLOCALE"]=" 1"
D["HAVE_SIGACTION"]=" 1"
D["HAVE_SLEEP"]=" 1"
D["HAVE_SOCKET"]=" 1"
D["HAVE_STPCPY"]=" 1"
D["HAVE_STRCASECMP"]=" 1"
D["HAVE_STRCHR"]=" 1"
D["HAVE_STRCSPN"]=" 1"
D["HAVE_STRDUP"]=" 1"
D["HAVE_STRERROR"]=" 1"
D["HAVE_STRNCASECMP"]=" 1"
D["HAVE_STRSTR"]=" 1"
D["HAVE_STRTOL"]=" 1"
D["HAVE_STRTOUL"]=" 1"
D["HAVE_STRTOULL"]=" 1"
D["HAVE_TZSET"]=" 1"
D["HAVE_UNSETENV"]=" 1"
D["HAVE_USLEEP"]=" 1"
D["HAVE_UTIME"]=" 1"
D["HAVE_UTIMES"]=" 1"
D["HAVE_SOME_FALLOCATE"]=" 1"
D["HAVE_ASCTIME_R"]=" 1"
D["HAVE_LOCALTIME_R"]=" 1"
D["HAVE_BASENAME"]=" 1"
D["HAVE_GAI_STRERROR"]=" 1"
D["HAVE_GETADDRINFO"]=" 1"
D["HAVE_GETTIMEOFDAY"]=" 1"
D["HAVE_STRPTIME"]=" 1"
D["HAVE_DAEMON"]=" 1"
D["HAVE_POLL"]=" 1"
D["HAVE_TIMEGM"]=" 1"
D["HAVE_KQUEUE"]=" 1"
D["HAVE_SOCKADDR_IN_SIN_LEN"]=" 1"
D["HAVE_SOCKADDR_IN6_SIN6_LEN"]=" 1"
D["HAVE_OPTION_CONST_NAME"]=" 1"
D["ENABLE_WEBSOCKET"]=" 1"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
